"""
Algorithms, HW 1, by Norman Wong, 5/25/2018. In python.
Function description: recursive function using karatsuba multiplier where result will be the product of inputs x and y. For example, if x is 1234 and y is 5678, program will parse values into a=12, b=34, c=56, d=78. The rescursive function will further break down the values into smaller parts. n and m in the function serve as length of the digits. 
Input requirements: x and y must be positive integers. 
The function will recursively multiply by breaking x and y into smaller parts x= ab and y = cd, such that 'a' is the left half of the string of digits and 'b' is teh right half.
"""

import math

def mult(x,y):
    if x==0:
        n = 1
    else:
        n = int(math.floor(math.log10(x))+1) #n is length of x
    if y==0:
        m = 1
    else:
        m = int(math.floor(math.log10(y))+1) #m is length of y
    if n==1 or m==1:
        result = x*y
    else:        
        
        nhalf = int(math.ceil(n/2)) # midpoint of n
        mhalf = int(math.ceil(m/2)) # midpoint of m
        
        a = int(str(x)[:nhalf]) #left half of x
        b = int(str(x)[nhalf:]) #right half of x
        c = int(str(y)[:mhalf]) #left half of y
        d = int(str(y)[mhalf:]) #right half of y
        print x, " ", y, " ", n, "", nhalf, " ", m, " ", mhalf, " ", a," ", b, " ", c," ", d
        result = 10**(n+m-mhalf-nhalf)*mult(a,c) + 10**(n-nhalf)*mult(a,d) + 10**(m-mhalf)*mult(b,c) + mult(b,d)
    return result

x = 3141592653589793238462643383279502884197169399375105820974944592
y = 2718281828459045235360287471352662497757247093699959574966967627

xy = mult(x,y)
xy2 = x*y # used to verify that output of mult() is correct.
print 'the product is ', long(xy)
print 'the product is ', long(xy2)
